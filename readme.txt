# HT证券客户端交易系统 HTTP API 接口文档

## 文档说明
本文档为华泰证券客户端交易系统的HTTP API接口规范，包含接口定义、请求参数、响应格式、使用示例等内容，支持直接复制保存为`.md`文件下载使用。文档适配带**自动登录功能**的Flask服务，适用于Windows系统下的证券交易操作。


## 一、基础信息
| 项目                | 说明                                  |
|---------------------|---------------------------------------|
| **基础URL**         | `http://{host}:{port}/api/trader`     |
| **默认服务地址**    | `http://localhost:5000/api/trader`    |
| **请求/响应格式**   | JSON                                  |
| **字符编码**        | UTF-8                                 |
| **适用系统**        | Windows（依赖pywinauto控制客户端）    |
| **会话超时时间**    | 30分钟                                |


## 二、通用响应格式
所有接口均返回统一结构的JSON响应，便于前端解析：
```json
{
  "code": 200,          // 状态码（200=成功，4xx=客户端错误，5xx=服务端错误）
  "message": "操作成功", // 状态描述（失败时返回具体错误原因）
  "data": {}            // 业务数据（成功时返回接口核心信息，失败时为null）
}
```


## 三、状态码说明
| 状态码 | 分类       | 说明                                  |
|--------|------------|---------------------------------------|
| 200    | 成功       | 接口调用成功                          |
| 400    | 客户端错误 | 请求参数缺失/格式错误（如数量非100整数倍） |
| 401    | 未授权     | session_id无效/过期/未登录            |
| 500    | 服务端错误 | 服务内部异常（如客户端连接失败）      |


## 四、会话管理规则
1. **会话标识**：登录/连接成功后返回`session_id`，后续接口需通过`Query参数`携带（自动登录模式可省略）。
2. **自动登录适配**：服务启动时若自动登录成功，调用接口可无需传递`session_id`，默认使用自动登录会话。
3. **会话失效**：超时（30分钟无操作）或调用`/exit`接口后，`session_id`失效，需重新登录/连接。


## 五、接口详细定义
按功能模块分类，包含所有可用接口的完整信息。

### 5.1 基础连接与登录接口
#### 5.1.1 连接已登录客户端
- **描述**：连接本地已启动并完成登录的华泰证券客户端（无需输入账号密码）
- **请求方法**：POST
- **请求路径**：`/connect`
- **请求体（JSON）**：
  | 参数名   | 类型   | 是否必填 | 说明                                  | 默认值                              |
  |----------|--------|----------|---------------------------------------|-----------------------------------|
  | exe_path | string | 否       | 客户端可执行文件路径（xiadan.exe）    | 自动查找常见路径（如C:\htzqzyb2\xiadan.exe） |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "成功连接客户端",
    "data": {
      "exe_path": "C:\\htzqzyb2\\xiadan.exe",
      "session_id": "a1b2c3d4-5678-90ef-ghij-klmnopqrstuv"
    }
  }
  ```

#### 5.1.2 手动登录客户端
- **描述**：启动并登录华泰证券客户端（需提供通讯密码，华泰必填）
- **请求方法**：POST
- **请求路径**：`/login`
- **请求体（JSON）**：
  | 参数名         | 类型   | 是否必填 | 说明                                  |
  |----------------|--------|----------|---------------------------------------|
  | user           | string | 是       | 资金账号/用户名                       |
  | password       | string | 是       | 交易密码                              |
  | comm_password  | string | 是       | 通讯密码（华泰证券强制要求）          |
  | exe_path       | string | 否       | 客户端可执行文件路径                  |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "登录成功",
    "data": {
      "session_id": "a1b2c3d4-5678-90ef-ghij-klmnopqrstuv",
      "main_window_title": "网上股票交易系统5.0"
    }
  }
  ```

#### 5.1.3 退出客户端
- **描述**：关闭已连接的华泰证券客户端，并销毁当前会话
- **请求方法**：POST
- **请求路径**：`/exit`
- **请求参数（Query）**：
  | 参数名     | 类型   | 是否必填 | 说明                                  |
  |------------|--------|----------|---------------------------------------|
  | session_id | string | 否       | 会话ID（自动登录模式可省略）          |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "客户端已退出",
    "data": null
  }
  ```

#### 5.1.4 查询会话状态
- **描述**：获取当前会话的登录状态、有效期等信息
- **请求方法**：GET
- **请求路径**：`/session-status`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "会话状态查询成功",
    "data": {
      "is_logged_in": true,
      "session_id": "a1b2c3d4-5678-90ef-ghij-klmnopqrstuv",
      "created_at": "2024-05-20 09:30:00",
      "last_active": "2024-05-20 10:15:30",
      "is_auto_login": true
    }
  }
  ```


### 5.2 数据查询接口
#### 5.2.1 获取资金余额
- **描述**：查询账户资金信息（余额、可用金额、总资产等）
- **请求方法**：GET
- **请求路径**：`/balance`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "资金余额": 50000.00,
      "可用金额": 45000.00,
      "可取金额": 10000.00,
      "股票市值": 15000.00,
      "总资产": 65000.00
    }
  }
  ```

#### 5.2.2 获取持仓信息
- **描述**：查询当前持有的股票列表及持仓详情（数量、成本价、市值等）
- **请求方法**：GET
- **请求路径**：`/position`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "证券代码": "600000",
        "证券名称": "浦发银行",
        "持仓数量": 1000,
        "可用数量": 1000,
        "成本价": 8.50,
        "最新价": 8.80,
        "市值": 8800.00
      }
    ]
  }
  ```

#### 5.2.3 获取当日委托
- **描述**：查询当日提交的所有委托单（未成交/部分成交/已撤销）
- **请求方法**：GET
- **请求路径**：`/today-entrusts`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "操作日期": "20240520",
        "委托编号": "12345678",
        "合同编号": "87654321",
        "证券代码": "600000",
        "委托价格": 8.70,
        "委托数量": 500,
        "委托状态": "未成交"
      }
    ]
  }
  ```

#### 5.2.4 获取当日成交
- **描述**：查询当日已成交的交易记录（成交时间、价格、金额等）
- **请求方法**：GET
- **请求路径**：`/today-trades`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "成交日期": "20240520",
        "成交时间": "09:35:20",
        "证券代码": "600000",
        "成交价格": 8.75,
        "成交数量": 500,
        "成交金额": 4375.00,
        "买卖方向": "买入"
      }
    ]
  }
  ```

#### 5.2.5 获取可撤单列表
- **描述**：查询当前可撤销的委托单（仅未成交委托）
- **请求方法**：GET
- **请求路径**：`/cancel-entrusts`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": [
      {
        "合同编号": "87654321",
        "证券代码": "600000",
        "委托价格": 8.70,
        "委托数量": 500,
        "委托状态": "未成交"
      }
    ]
  }
  ```


### 5.3 交易操作接口
#### 5.3.1 限价买入
- **描述**：以指定价格买入股票（数量需为100股的整数倍）
- **请求方法**：POST
- **请求路径**：`/buy`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **请求体（JSON）**：
  | 参数名     | 类型   | 是否必填 | 说明                                  |
  |------------|--------|----------|---------------------------------------|
  | security   | string | 是       | 证券代码（如600000=上海A股，000001=深圳A股） |
  | price      | float  | 是       | 委托价格（保留2位小数，如8.75）       |
  | amount     | int    | 是       | 委托数量（100的整数倍，如100、200）   |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "success",
    "data": {
      "message": "success",
      "委托编号": "12345678",
      "合同编号": "87654321"
    }
  }
  ```

#### 5.3.2 限价卖出
- **描述**：以指定价格卖出股票（需持有对应数量股票）
- **请求方法**：POST
- **请求路径**：`/sell`
- **请求参数**：同“限价买入”（`security`为持仓股票代码）
- **成功响应示例**：同“限价买入”

#### 5.3.3 市价买入
- **描述**：以市价委托买入股票（按市场实时价格成交，无需指定价格）
- **请求方法**：POST
- **请求路径**：`/market-buy`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **请求体（JSON）**：
  | 参数名     | 类型   | 是否必填 | 说明                                  |
  |------------|--------|----------|---------------------------------------|
  | security   | string | 是       | 证券代码                              |
  | amount     | int    | 是       | 委托数量（100的整数倍）               |
  | ttype      | string | 否       | 市价类型（如“五档即时成交剩余撤销”“五档即时成交剩余转限价”） |
- **成功响应示例**：同“限价买入”

#### 5.3.4 市价卖出
- **描述**：以市价委托卖出股票（需持有对应数量股票）
- **请求方法**：POST
- **请求路径**：`/market-sell`
- **请求参数**：同“市价买入”（`security`为持仓股票代码）
- **成功响应示例**：同“限价买入”

#### 5.3.5 撤销指定委托
- **描述**：通过“合同编号”撤销单个可撤委托单
- **请求方法**：POST
- **请求路径**：`/cancel-entrust`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **请求体（JSON）**：
  | 参数名     | 类型   | 是否必填 | 说明                                  |
  |------------|--------|----------|---------------------------------------|
  | entrust_no | string | 是       | 委托单的“合同编号”（从`/today-entrusts`或`/cancel-entrusts`获取） |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "撤单成功",
    "data": {
      "message": "撤单成功",
      "合同编号": "87654321"
    }
  }
  ```

#### 5.3.6 撤销所有委托
- **描述**：一键撤销当前所有可撤委托单
- **请求方法**：POST
- **请求路径**：`/cancel-all-entrusts`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "全部撤单操作已提交",
    "data": {
      "message": "全部撤单操作已提交",
      "撤销数量": 2
    }
  }
  ```

#### 5.3.7 自动申购新股
- **描述**：批量申购当日可申购的所有新股（自动识别可申购额度）
- **请求方法**：POST
- **请求路径**：`/auto-ipo`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "新股申购完成",
    "data": {
      "message": "新股申购完成",
      "可申购新股数量": 2,
      "已申购新股": [
        {"证券代码": "787001", "申购数量": 5000},
        {"证券代码": "001366", "申购数量": 10000}
      ]
    }
  }
  ```


### 5.4 工具类接口
#### 5.4.1 刷新数据
- **描述**：刷新客户端当前页面数据（模拟F5按键，更新持仓/委托/成交信息）
- **请求方法**：POST
- **请求路径**：`/refresh`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "数据刷新完成",
    "data": null
  }
  ```

#### 5.4.2 等待指定时间
- **描述**：暂停客户端操作指定秒数（用于流程间延迟，如等待委托确认）
- **请求方法**：POST
- **请求路径**：`/wait`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **请求体（JSON）**：
  | 参数名   | 类型   | 是否必填 | 说明                                  |
  |----------|--------|----------|---------------------------------------|
  | seconds  | float  | 是       | 等待时间（单位：秒，如0.5、1.2）      |
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "等待完成（0.5秒）",
    "data": null
  }
  ```

#### 5.4.3 检查弹出对话框
- **描述**：判断客户端是否存在弹出对话框（如委托确认、错误提示）
- **请求方法**：GET
- **请求路径**：`/check-pop-dialog`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "has_pop_dialog": true
    }
  }
  ```

#### 5.4.4 关闭弹出对话框
- **描述**：关闭客户端当前弹出的对话框（如委托确认框、提示框）
- **请求方法**：POST
- **请求路径**：`/close-pop-dialog`
- **请求参数（Query）**：`session_id`（可选，自动登录模式可省略）
- **成功响应示例**：
  ```json
  {
    "code": 200,
    "message": "弹出对话框已关闭",
    "data": null
  }
  ```


## 六、常见错误及解决方案
| 错误信息                                  | 可能原因                                  | 解决方案                                  |
|-------------------------------------------|-------------------------------------------|-------------------------------------------|
| 无效的会话ID，请重新连接或登录            | session_id不存在/已过期/未登录            | 1. 调用`/login`或`/connect`获取新session_id；2. 自动登录模式检查服务是否已登录 |
| 缺少必填参数：comm_password               | 登录时未传递通讯密码                      | 在`/login`请求体中添加`comm_password`字段 |
| 委托数量不符合规则                        | 委托数量不是100的整数倍                   | 调整`amount`为100、200等100的整数倍       |
| 连接客户端失败，请检查路径是否正确        | 客户端路径错误或未安装                    | 1. 确认xiadan.exe路径；2. 服务会自动查找常见路径（如C:\htzqzyb2\xiadan.exe） |
| 登录失败，请检查账号密码                  | 账号/交易密码/通讯密码错误                | 核对账号密码，确保通讯密码正确（华泰必填） |
| 未连接到客户端                            | 未登录或客户端已关闭                      | 先调用`/login`或`/connect`接口建立连接    |


## 七、使用示例
### 7.1 Python请求示例（自动登录模式）
```python
import requests
import json

# 基础URL（自动登录模式无需传递session_id）
BASE_URL = "http://localhost:5000/api/trader"

# 1. 查询资金余额
response = requests.get(f"{BASE_URL}/balance")
balance_data = json.loads(response.text)
print("总资产:", balance_data["data"]["总资产"])

# 2. 限价买入股票（600000 浦发银行，价格8.75，数量100）
buy_params = {
    "security": "600000",
    "price": 8.75,
    "amount": 100
}
buy_response = requests.post(f"{BASE_URL}/buy", json=buy_params)
print("买入结果:", json.loads(buy_response.text))

# 3. 查询当日委托
entrusts_response = requests.get(f"{BASE_URL}/today-entrusts")
print("当日委托:", json.loads(entrusts_response.text)["data"])
```

### 7.2 Postman请求示例（手动登录模式）
1. **登录**：
   - 方法：POST
   - URL：`http://localhost:5000/api/trader/login`
   - Body（raw/JSON）：
     ```json
     {
       "user": "12345678",
       "password": "your_trade_pwd",
       "comm_password": "your_comm_pwd"
     }
     ```
   - 提取响应中的`session_id`。

2. **查询持仓**：
   - 方法：GET
   - URL：`http://localhost:5000/api/trader/position?session_id=a1b2c3d4-5678-90ef-ghij-klmnopqrstuv`
   - 发送请求即可获取持仓数据。


## 八、附录
### 8.1 自动登录配置文件模板（config.ini）
服务启动时自动读取此文件完成登录，需放在服务脚本同级目录：
```ini
[Trader]
# 华泰证券客户端可执行文件路径（可选，服务会自动查找）
exe_path = C:\htzqzyb2\xiadan.exe

[Account]
# 资金账号/用户名
user = 12345678
# 交易密码
password = your_trade_password
# 通讯密码（华泰证券必填）
comm_password = your_communication_password
```

### 8.2 文档下载说明
1. 复制本文档全部内容；
2. 打开记事本/VS Code等编辑器，粘贴内容；
3. 保存文件，文件名后缀为`.md`（如`华泰证券API文档.md`）；
4. 双击文件即可用Markdown阅读器（如Typora、语雀）打开。


## 九、注意事项
1. **安全性**：
   - 账号密码（尤其是通讯密码）请勿明文传输，建议在服务端配置文件中加密存储；
   - 自动登录模式下，`config.ini`文件需设置访问权限，避免泄露。
2. **交易风险**：
   - 所有交易操作需谨慎，建议在调用接口前通过查询接口确认账户状态；
   - 市价委托可能因市场波动导致成交价格与预期不符，需注意风险。
3. **性能限制**：
   - 接口调用频率不宜过高（建议间隔≥500ms），避免客户端卡顿；
   - 单次查询/交易操作超时时间为30秒，超时后需重新发起请求。
4. **系统依赖**：
   - 仅支持Windows系统（依赖pywinauto控制客户端）；
   - 需安装华泰证券客户端（网上股票交易系统5.0），并确保版本兼容。